{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","img","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8GCSlMC,EANI,SAACC,GAChB,OAAO,sBAAMC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAApC,UACFJ,EAAMK,IACP,eAAC,IAAD,CAASC,GAAI,YAAcN,EAAMO,GAAjC,cAAuCP,EAAMQ,KAA7C,WCCOC,EALC,SAACT,GACb,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SAA2BH,EAAMU,W,iCCAnCC,EAAcC,YAAiB,IAkBtBC,EAFaC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACd,GACpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBAAiBe,YAAY,yBAG7C,8BACI,kDCkBDC,EAxBC,SAACxB,GACb,IAAIyB,EAAQzB,EAAM0B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYzB,IAAKyB,EAAEzB,IAAKG,KAAMsB,EAAEtB,KAAiBD,GAAIuB,EAAEvB,IAAZuB,EAAEvB,OACtFwB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAE1B,OAKnF,OAAKP,EAAMkC,OAEP,sBAAKjC,UAAWC,IAAE0B,QAAlB,UACI,qBAAK3B,UAAWC,IAAEiC,aAAlB,SAEQR,IAGR,qBAAK1B,UAAWC,IAAE8B,SAAlB,SACI,8BAAMD,MAEV,cAAC,EAAD,CAAgBf,SAdJ,SAACoB,GACjBpC,EAAMqC,YAAYD,EAAOE,sBAEH,cAAC,IAAD,CAAUhC,GAAM,Y,+CCf1CiC,EAA6B,SAACd,GAAD,MAAY,CACzCS,OAAQT,EAAMe,KAAKN,S,QC0BRO,sBAASC,aAtBH,SAACjB,GAClB,MAAO,CACHC,YAAaD,EAAMC,gBAIH,SAACiB,GAErB,MAAM,CACFN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDZR,SAACO,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAK/C,MAAMkC,OACT,cAACW,EAAD,eAAeE,KAAK/C,QADI,cAAC,IAAD,CAAUM,GAAG,eAHT,GACX0C,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCe9DL,CAAyEjB","file":"static/js/4.1fe01144.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2eOw_\",\"dialogItems\":\"Dialogs_dialogItems__s4YPZ\",\"dialog\":\"Dialogs_dialog__mO42e\",\"active\":\"Dialogs_active__1qeCY\",\"messages\":\"Dialogs_messages__11Bzu\",\"message\":\"Dialogs_message__JDHRR\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return < div className={s.dialog + ' ' + s.active}>\r\n        {props.img}\r\n        <NavLink to={'/dialogs/' + props.id}> {props.name} </NavLink>\r\n    </div>;\r\n}\r\nexport default DialogItem;","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    );\r\n}\r\nexport default Message;","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name='newMessageBody' placeholder='Enter your message'\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default AddMessageFormRedux;","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\n<DialogItem/>;\r\n<Message/>;\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem img={d.img} name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n    if (!props.isAuth) return <Redirect to = {'/login'}/>\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {\r\n                    dialogsElements\r\n                }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react'\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps= (state) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        // isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps= (dispatch) =>{\r\n\r\n    return{\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n        // updateNewMessageBody: (body) => {\r\n        //     dispatch(updateNewMessageBodyCreator(body));\r\n        // }\r\n    }\r\n}\r\n// compose (connect(mapStateToProps, mapDispatchToProps),withAuthRedirect) (Dialogs)\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n//\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (AuthRedirectComponent);\r\n// export default DialogsContainer;\r\nexport default compose (connect(mapStateToProps, mapDispatchToProps),withAuthRedirect) (Dialogs);"],"sourceRoot":""}