{"version":3,"sources":["components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","content","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","preloader","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","likeCount","maxLength10","maxLengthCreator","AddNewPostForm","Field","name","component","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","p","likesCount","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.e0f57f56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2UiwA\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__bWq4n\",\"preloader\":\"ProfileInfo_preloader__2K8Hr\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1020S\",\"contact\":\"ProfileInfo_contact__1LGfJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1UUwC\",\"cat\":\"Profile_cat__1oS50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3IUhd\",\"posts\":\"MyPosts_posts__NHUBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__9EetR\"};","import React, {useEffect, useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div className={s.content}>\r\n                <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"../../../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {createField('Full name', 'fullName', [], Input,)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:\r\n            {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField('About me', 'aboutMe', [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map((key) => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, 'contacts.' + key, [], Input,)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../../assets/images/images_.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    if (!profile) {\r\n        return <div className={s.preloader}><Preloader/></div>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => { //применили .then, чтобы увидеть ошибку\r\n      saveProfile(formData).then (\r\n          () => {\r\n              setEditMode(false)\r\n          }\r\n      );\r\n    }\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n                {editMode\r\n                     ? <ProfileDataForm initialValues ={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    :<ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner = {isOwner}/>\r\n                }\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>);\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) =>{\r\n        return <div>\r\n            {isOwner && <div><button onClick = {goToEditMode}>edit</button> </div>}\r\n\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n            {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {\r\n            Object\r\n                .keys(profile.contacts)\r\n                .map((key) => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[(key)]}/>\r\n                })}\r\n        </div>\r\n    </div>\r\n}\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Cameronavatar.jpg/200px-Cameronavatar.jpg'></img>\r\n            {props.message};\r\n            <div>\r\n                <span> like</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet AddNewPostForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name='newPostText' component={Textarea} placeholder={'Post message'}\r\n                   validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button> Add post</button>\r\n        </div>\r\n    </form>);\r\n}\r\nlet AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n//оптимизация\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likesCount}/>)\r\n    let newPostElement = React.createRef();\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n    return <div className={s.postsBlock}>\r\n        <div>\r\n            <h3> My posts </h3>\r\n        </div>\r\n        <AddNewPostForm onSubmit={onAddPost}/>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n});\r\n\r\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewPostText: (text) => {\r\n        //     let action = updateNewPostTextActionCreator(text);\r\n        //     dispatch(action);\r\n        // },\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo savePhoto = {props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status = {props.status}\r\n                         saveProfile = {props.saveProfile}\r\n                         updateStatus = {props.updateStatus}/>\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>);\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            //userId = 18696;\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId }\r\n                     profile={this.props.profile}\r\n                     status = {this.props.status}\r\n                     updateStatus = {this.props.updateStatus}\r\n                     savePhoto = {this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(connect(mapStateToProps,\r\n    {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter) (ProfileContainer)\r\n\r\n"],"sourceRoot":""}